#include "model_map.h"
#include <cstring>

static constexpr model_map_entry_t model_map[] = {
    { 0x0000, "Configuration Server" },
    { 0x0001, "Configuration Client" },
    { 0x0002, "Health Server" },
    { 0x0003, "Health Client" },
    { 0x0004, "Remote Provisioning Server" },
    { 0x0005, "Remote Provisioning Client" },
    { 0x0006, "Directed Forwarding Configuration Server" },
    { 0x0007, "Directed Forwarding Configuration Client" },
    { 0x0008, "Bridge Configuration Server" },
    { 0x0009, "Bridge Configuration Client" },
    { 0x000A, "Mesh Private Beacon Server" },
    { 0x000B, "Mesh Private Beacon Client" },
    { 0x000C, "On-Demand Private Proxy Server" },
    { 0x000D, "On-Demand Private Proxy Client" },
    { 0x000E, "SAR Configuration Server" },
    { 0x000F, "SAR Configuration Client" },
    { 0x0010, "Opcodes Aggregator Server" },
    { 0x0011, "Opcodes Aggregator Client" },
    { 0x0012, "Large Composition Data Server" },
    { 0x0013, "Large Composition Data Client" },
    { 0x0014, "Solicitation PDU RPL Configuration Server" },
    { 0x0015, "Solicitation PDU RPL Configuration Client" },
    { 0x1000, "Generic OnOff Server" },
    { 0x1001, "Generic OnOff Client" },
    { 0x1002, "Generic Level Server" },
    { 0x1003, "Generic Level Client" },
    { 0x1004, "Generic Default Transition Time Server" },
    { 0x1005, "Generic Default Transition Time Client" },
    { 0x1006, "Generic Power OnOff Server" },
    { 0x1007, "Generic Power OnOff Setup Server" },
    { 0x1008, "Generic Power OnOff Client" },
    { 0x1009, "Generic Power Level Server" },
    { 0x100A, "Generic Power Level Setup Server" },
    { 0x100B, "Generic Power Level Client" },
    { 0x100C, "Generic Battery Server" },
    { 0x100D, "Generic Battery Client" },
    { 0x100E, "Generic Location Server" },
    { 0x100F, "Generic Location Setup Server" },
    { 0x1010, "Generic Location Client" },
    { 0x1011, "Generic Admin Property Server" },
    { 0x1012, "Generic Manufacturer Property Server" },
    { 0x1013, "Generic User Property Server" },
    { 0x1014, "Generic Client Property Server" },
    { 0x1015, "Generic Property Client" },
    { 0x1100, "Sensor Server" },
    { 0x1101, "Sensor Setup Server" },
    { 0x1102, "Sensor Client" },
    { 0x1200, "Time Server" },
    { 0x1201, "Time Setup Server" },
    { 0x1202, "Time Client" },
    { 0x1203, "Scene Server" },
    { 0x1204, "Scene Setup Server" },
    { 0x1205, "Scene Client" },
    { 0x1206, "Scheduler Server" },
    { 0x1207, "Scheduler Setup Server" },
    { 0x1208, "Scheduler Client" },
    { 0x1300, "Light Lightness Server" },
    { 0x1301, "Light Lightness Setup Server" },
    { 0x1302, "Light Lightness Client" },
    { 0x1303, "Light CTL Server" },
    { 0x1304, "Light CTL Setup Server" },
    { 0x1305, "Light CTL Client" },
    { 0x1306, "Light CTL Temperature Server" },
    { 0x1307, "Light HSL Server" },
    { 0x1308, "Light HSL Setup Server" },
    { 0x1309, "Light HSL Client" },
    { 0x130A, "Light HSL Hue Server" },
    { 0x130B, "Light HSL Saturation Server" },
    { 0x130C, "Light xyL Server" },
    { 0x130D, "Light xyL Setup Server" },
    { 0x130E, "Light xyL Client" },
    { 0x130F, "Light LC Server" },
    { 0x1310, "Light LC Setup Server" },
    { 0x1311, "Light LC Client" },
    { 0x0000, "" } // sentinel
};

const char *lookup_model_name(uint32_t model_id) {
        for (int i = 0; strcmp(model_map[i].name, "") != 0; ++i) {
            if (model_map[i].model_id == model_id) {
                return model_map[i].name;
            }
        }
        return "Unknown Model";
    }
    